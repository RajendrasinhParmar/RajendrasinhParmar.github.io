---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import slugify from "@utils/slugify";
import { SITE } from "@config";
import getSortedPosts from "@utils/getSortedPosts";
import getSortedBooks from "@utils/getSortedBooks";
import { filterPostByDraft, filterBookByDraft } from "@utils/common";
import getBooksByTag from "@utils/getBooksByTag";
export interface Props {
  post: CollectionEntry<"blog" | "book">;
  tag: string;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  const books = await getCollection("book");
  const tags = getUniqueTags(posts, books);

  return tags.map(tag => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}

const { tag } = Astro.props;

const posts = await getCollection("blog", filterPostByDraft);
const books = await getCollection("book", filterBookByDraft);

const tagPosts = getPostsByTag(posts, tag);
const tagBooks = getBooksByTag(books, tag);

const sortTagsPost = getSortedPosts(tagPosts);
const sortTagsBooks = getSortedBooks(tagBooks);
---

<Layout title={`Tag:${tag} | ${SITE.title}`}>
  <Header activeNav="tags" />
  <Main
    pageTitle={[`Tag:`, `${tag}`]}
    titleTransition={tag}
    pageDesc={`All the articles with the tag "${tag}".`}
  >
    <h1 slot="title" transition:name={tag}>{`Tag:${tag}`}</h1>
    <ul>
      {
        sortTagsPost.map(({ data }) => (
          <Card href={`/posts/${slugify(data)}`} frontmatter={data} />
        ))
      }
      {
        sortTagsBooks.map(({ data }) => (
          <Card href={`/books/${slugify(data)}`} frontmatter={data} />
        ))
      }
    </ul>
  </Main>
  <Footer />
</Layout>
